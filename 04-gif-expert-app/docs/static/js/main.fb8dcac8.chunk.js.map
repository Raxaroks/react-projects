{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","evt","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","getGifs","ctgry","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","category","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+KAoCeA,EAjCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAiBzC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAIC,iBAECJ,EAAWK,OAAOC,OAAS,GAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,QAM3C,SACI,uBACIC,KAAK,OACLC,YAAY,aACZC,MAAQV,EACRW,SAnBc,SAACR,GACvBF,EAAcE,EAAIS,OAAOF,a,+BCRpBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACTC,EADS,iDACuCC,UAAUH,GADjD,+DAGQI,MAAOF,GAHf,cAGTG,EAHS,gBAIMA,EAASC,OAJf,uBAIRC,EAJQ,EAIRA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV3B,kBAcRM,GAdQ,4CAAH,sDCcLO,G,KAXK,SAAC,GAA0B,EAAvBJ,GAAwB,IAApBC,EAAmB,EAAnBA,MAAOV,EAAY,EAAZA,IAE/B,OACI,sBAAKc,UAAU,wCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,SCuBFO,EA3BC,SAAC,GAAoB,IAAjBC,EAAgB,EAAhBA,SAAgB,ECDR,SAAEA,GAAe,IAAD,EAEdnC,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdAC,qBAAW,WAEPzB,EAASqB,GACJK,MAAM,SAAAC,GAEHH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAKtB,CAACD,IAEGE,EDlB2BK,CAAcP,GAAlCP,EAFkB,EAExBN,KAAcc,EAFU,EAEVA,QAEtB,OACI,qCACI,oBAAIL,UAAU,oCAAd,SAAoDI,IAGhDC,GAAW,4CAGf,qBAAKL,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aESvBiB,EAzBM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,kBAFvB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQ6C,EAAWpB,KAAK,SAAAW,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADNA,YCdjCU,IAASC,OAAQ,cAAC,EAAD,IAAiBC,SAASC,eAAe,U","file":"static/js/main.fb8dcac8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (evt) => {\r\n        setInputValue(evt.target.value);\r\n    }\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [inputValue, ...cats] );\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type='text'\r\n                placeholder='Escribe...' \r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async ( ctgry ) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(ctgry)}&limit=10&api_key=s8S2uTxQWPLjo0kecYpf2BnqCmTa6NTy`;\r\n\r\n        const response = await fetch( url );\r\n        const {data} = await response.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        } )\r\n\r\n        return gifs;     \r\n    }","import React from 'react'\r\nimport '../index.css';\r\n\r\nconst GifGridItem = ( { id, title, url  } ) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__pulse'>\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ( { category } ) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );    \r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\r\n\r\n            {\r\n                loading && <p>Loading ...</p>\r\n            }\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            { ...img } \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs  } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n    \r\n    useEffect( () => {\r\n        \r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n                \r\n            } );\r\n\r\n    }, [category] );\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball Z']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            {/* <button onClick={null}>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={ category } \r\n                        />\r\n                    ) )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'; // importando el componente principal de la app, el cual se va a renderizar como componente raíz\nimport './index.css'; // importando archivo con estilos generales\n\nReactDOM.render( <GifExpertApp/>, document.getElementById('root') ); // renderizando el componente raíz\n\n\n\n"],"sourceRoot":""}